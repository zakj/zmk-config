#include <behaviors.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define L_BASE 0
#define L_NUMSYM 1
#define L_NAV 2
#define L_EXTRA 3
#define L_GAME 4

/ {
    chosen {
        zmk,matrix_transform = &five_column_transform;
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "Auto-shift";
            #binding-cells = <2>;
            tapping_term_ms = <135>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow mods";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        htl: holdtap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold/tap layer";
            bindings =
                <&to>,
                <&mo>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };
        u_bootloader: u_bootloader {
            compatible = "zmk,behavior-tap-dance";
            label = "U_BOOTLOADER";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&bootloader>;
        };
        u_bt_clr: u_bt_clr {
            compatible = "zmk,behavior-tap-dance";
            label = "U_BT_CLR";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&bt BT_CLR>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
            layers = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <21 22>;
            layers = <0 1>;
        };

        bspc {
            bindings = <&kp BSPC>;
            key-positions = <7 8>;
            layers = <0 1>;
        };

        enter {
            bindings = <&kp RET>;
            key-positions = <27 28>;
            layers = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
  &kp Q  &kp W  &kp E       &kp R       &kp T        &kp Y      &kp U        &kp I       &kp O    &kp P
  &kp A  &kp S  &hm LALT D  &hm LGUI F  &kp G        &kp H      &hm LGUI J   &hm LALT K  &kp L    &kp SEMI
  &kp Z  &kp X  &kp C       &kp V       &kp B        &kp N      &kp M        &kp COMMA   &kp DOT  &kp SLASH
                &htl 1 1    &kp LCTRL   &kp LSHFT    &kp SPACE  &as DQT SQT  &mo 2
            >;
        };

        sym_layer {
            bindings = <
  &as EXCL N1  &as AT N2  &as HASH N3    &as DLLR N4  &as PRCNT N5    &as CARET N6  &as AMPS N7     &as STAR N8    &as LPAR N9  &as RPAR N0
  &kp GRAVE    &kp LPAR   &hm LALT RPAR  &kp LGUI     &kp F18         &kp EQUAL     &hm LGUI MINUS  &hm LALT LBRC  &kp RBRC     &kp PIPE
  &kp TILDE    &none      &none          &none        &none           &kp PLUS      &kp UNDER       &kp LBKT       &kp RBKT     &kp BSLH
                          &to 0          &trans       &trans          &trans        &trans          &trans
            >;
        };

        nav_layer {
            bindings = <
  &none  &none  &none     &none     &none     &kp LS(LG(LBKT))  &none          &none         &kp LS(LG(RBKT))  &none
  &none  &none  &kp LALT  &kp LGUI  &none     &kp LEFT          &hm LGUI DOWN  &hm LCTRL UP  &hm LALT RIGHT    &caps_word
  &none  &none  &none     &none     &none     &kp HOME          &kp PG_DN      &kp PG_UP     &kp END           &none
                &trans    &trans    &trans    &trans            &trans         &trans
            >;
        };

        ext_layer {
            bindings = <
  &none         &none         &none         &none         &u_bootloader    &none       &kp F14       &kp F15       &none       &none
  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &u_bt_clr        &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &kp C_PP
  &none         &none         &none         &none         &none            &none       &none         &none         &none       &to L_GAME
                              &none         &none         &none            &none       &none         &none
            >;
        };

        game_layer {
            bindings = <
  &kp TAB    &kp Q  &kp W    &kp E     &kp R      &kp Y    &kp U      &kp I       &kp O    &kp P
  &kp LSHFT  &kp A  &kp S    &kp D     &kp F      &kp H    &kp J      &kp K       &kp L    &kp SQT
  &kp LCTRL  &kp Z  &kp X    &kp C     &kp V      &kp N    &kp M      &kp COMMA   &kp DOT  &kp SLASH
                    &kp ESC  &kp BSPC  &kp TAB    &kp RET  &kp SPACE  &to L_BASE
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        extra {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
