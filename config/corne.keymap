#include <dt-bindings/zmk/matrix_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define L_BASE 0
#define L_NUMSYM 1
#define L_NAV 2
#define L_EXTRA 3
#define L_GAME 4

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "Auto-shift";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <135>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow mods";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <135>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <50>;
        };

        htl: holdtap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold/tap layer";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            bindings = <&mo>, <&to>;
        };

        u_bootloader: u_bootloader {
            compatible = "zmk,behavior-tap-dance";
            label = "U_BOOTLOADER";
            #binding-cells = <0>;
            bindings = <&none>, <&bootloader>;
        };

        u_bt_clr: u_bt_clr {
            compatible = "zmk,behavior-tap-dance";
            label = "U_BT_CLR";
            #binding-cells = <0>;
            bindings = <&none>, <&bt BT_CLR>;
        };
    };

    combos {
        compatible = "zmk,combos";

        space_hold {
            bindings = <&kp SPACE>;
            key-positions = <31 32>;
        };
    };

    macros {
        smile: smile {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp RPAR>;
            label = "SMILE";
        };

        frown: frown {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp LPAR>;
            label = "FROWN";
        };

        r_arr: r_arr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "R_ARR";
        };

        r_dbl_arr: r_dbl_arr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "R_DBL_ARR";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
  &kp Q  &kp W  &kp E          &kp R       &kp T        &kp Y      &kp U       &kp I       &kp O    &kp P
  &kp A  &kp S  &hm LALT D     &hm LGUI F  &kp G        &kp H      &hm RGUI J  &hm RALT K  &kp L    &kp SQT
  &kp Z  &kp X  &kp C          &kp V       &kp B        &kp N      &kp M       &kp COMMA   &kp DOT  &kp SLASH
                &mt LCTRL ESC  &kp LSHFT   &lt 1 TAB    &lt 2 RET  &kp SPACE   &kp BSPC
            >;
        };

        sym_layer {
            bindings = <
  &kp EXCL         &kp AT           &kp HASH   &kp DLLR  &kp LBRC    &kp RBRC  &kp N7  &kp N8  &kp N9  &kp PIPE
  &as PLUS EQUAL   &kp UNDER        &kp MINUS  &kp SEMI  &kp LPAR    &kp RPAR  &kp N4  &kp N5  &kp N6  &kp COLON
  &as CARET PRCNT  &as TILDE GRAVE  &kp AMPS   &kp STAR  &kp LBKT    &kp RBKT  &kp N1  &kp N2  &kp N3  &kp BSLH
                                    &trans     &trans    &trans      &trans    &kp N0  &trans
            >;
        };

        nav_layer {
            bindings = <
  &bt BT_SEL 3          &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &u_bt_clr    &kp PG_UP  &kp LS(LG(LBKT))  &kp UP_ARROW  &kp LS(LG(RBKT))  &none
  &sk LS(LA(LC(LGUI)))  &kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP  &kp F15      &kp PG_DN  &kp LEFT          &kp DOWN      &kp RIGHT         &sk LS(LA(LC(LGUI)))
  &none                 &kp C_PREV    &kp C_PP      &kp C_NEXT    &kp F14      &none      &kp HOME          &none         &kp END           &none
                                      &trans        &trans        &trans       &trans     &trans            &trans
            >;
        };

        ext_layer {
            bindings = <
  &kp F1         &kp F2  &kp F3         &kp F4             &kp F5    &kp F6  &kp F7  &kp F8  &kp F9      &kp F10
  &u_bootloader  &none   &kp LA(MINUS)  &kp LS(LA(MINUS))  &frown    &smile  &none   &none   &none       &u_bootloader
  &none          &none   &none          &none              &none     &none   &none   &r_arr  &r_dbl_arr  &none
                         &trans         &trans             &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        extra {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
